{"ast":null,"code":"var _jsxFileName = \"/home/sudip/taskrabbit-frontend/src/Pages/EmpHome/tasks.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport bell from \"../../Assets/Icons/notification-bell.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = props => {\n  _s();\n  const [allTasks, setAllTasks] = useState();\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n  const userDetails = JSON.parse(sessionStorage.getItem('user'));\n  const employee_id = userDetails['user']['username'];\n  const first_name = userDetails['user']['first_name'];\n  const last_name = userDetails['user']['last_name'];\n  const full_name = first_name.concat(\" \", last_name);\n  useEffect(() => {\n    // Function to update the current date and time\n    const updateDateTime = () => {\n      setCurrentDateTime(new Date());\n    };\n\n    // Set up an interval to update the time every second\n    const intervalId = setInterval(updateDateTime, 1000);\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Format the date and time as needed\n  const formattedDate = currentDateTime.toLocaleDateString();\n  const formattedTime = currentDateTime.toLocaleTimeString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Hello \", first_name, \",\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Welcome to your task management system\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [formattedDate, \",\", formattedTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: bell,\n            alt: \"notification...\",\n            height: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Tasks, \"ujlkqa+h8gX8RSAVhTFPc3u4t8s=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","bell","jsxDEV","_jsxDEV","Tasks","props","_s","allTasks","setAllTasks","currentDateTime","setCurrentDateTime","Date","userDetails","JSON","parse","sessionStorage","getItem","employee_id","first_name","last_name","full_name","concat","updateDateTime","intervalId","setInterval","clearInterval","formattedDate","toLocaleDateString","formattedTime","toLocaleTimeString","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","height","_c","$RefreshReg$"],"sources":["/home/sudip/taskrabbit-frontend/src/Pages/EmpHome/tasks.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport bell from \"../../Assets/Icons/notification-bell.png\";\n\nconst Tasks = ( props ) => {\n    const [ allTasks, setAllTasks ] = useState();\n    const [currentDateTime, setCurrentDateTime] = useState(new Date());\n\n    const userDetails = JSON.parse(sessionStorage.getItem('user'))\n    const employee_id = userDetails['user']['username']\n    const first_name = userDetails['user']['first_name']\n    const last_name = userDetails['user']['last_name']\n    const full_name = first_name.concat(\" \",last_name);\n\n    useEffect(() => {\n        // Function to update the current date and time\n        const updateDateTime = () => {\n          setCurrentDateTime(new Date());\n        };\n    \n        // Set up an interval to update the time every second\n        const intervalId = setInterval(updateDateTime, 1000);\n    \n        // Clean up the interval on component unmount\n        return () => clearInterval(intervalId);\n      }, []);\n    \n    // Format the date and time as needed\n    const formattedDate = currentDateTime.toLocaleDateString();\n    const formattedTime = currentDateTime.toLocaleTimeString();\n\n    return(\n        <div>\n            <div>\n                <div>\n                    Hello {first_name},\n                </div>\n                <div>\n                    Welcome to your task management system\n                </div>\n                <div>\n                    <p>{formattedDate},{formattedTime}</p>\n                    <div>\n                        <img src={bell} alt=\"notification...\" height=\"20px\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Tasks;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAOC,IAAI,MAAM,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,KAAK,GAAKC,KAAK,IAAM;EAAAC,EAAA;EACvB,MAAM,CAAEC,QAAQ,EAAEC,WAAW,CAAE,GAAGT,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAIY,IAAI,CAAC,CAAC,CAAC;EAElE,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAC9D,MAAMC,WAAW,GAAGL,WAAW,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC;EACnD,MAAMM,UAAU,GAAGN,WAAW,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC;EACpD,MAAMO,SAAS,GAAGP,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC;EAClD,MAAMQ,SAAS,GAAGF,UAAU,CAACG,MAAM,CAAC,GAAG,EAACF,SAAS,CAAC;EAElDnB,SAAS,CAAC,MAAM;IACZ;IACA,MAAMsB,cAAc,GAAGA,CAAA,KAAM;MAC3BZ,kBAAkB,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC;;IAED;IACA,MAAMY,UAAU,GAAGC,WAAW,CAACF,cAAc,EAAE,IAAI,CAAC;;IAEpD;IACA,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAER;EACA,MAAMG,aAAa,GAAGjB,eAAe,CAACkB,kBAAkB,CAAC,CAAC;EAC1D,MAAMC,aAAa,GAAGnB,eAAe,CAACoB,kBAAkB,CAAC,CAAC;EAE1D,oBACI1B,OAAA;IAAA2B,QAAA,eACI3B,OAAA;MAAA2B,QAAA,gBACI3B,OAAA;QAAA2B,QAAA,GAAK,QACK,EAACZ,UAAU,EAAC,GACtB;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN/B,OAAA;QAAA2B,QAAA,EAAK;MAEL;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN/B,OAAA;QAAA2B,QAAA,gBACI3B,OAAA;UAAA2B,QAAA,GAAIJ,aAAa,EAAC,GAAC,EAACE,aAAa;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtC/B,OAAA;UAAA2B,QAAA,eACI3B,OAAA;YAAKgC,GAAG,EAAElC,IAAK;YAACmC,GAAG,EAAC,iBAAiB;YAACC,MAAM,EAAC;UAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAA5B,EAAA,CA7CKF,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AA+CX,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}