{"ast":null,"code":"var _jsxFileName = \"/home/sudip/taskrabbit-frontend/src/Pages/EmpHome/taskList.js\";\nimport React from \"react\";\nimport './taskList.css'; // Add your custom styles here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  taskList\n}) => {\n  var _taskList$;\n  function DateExtractor(dateString) {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Ensure two digits for the month\n    const day = String(date.getDate()).padStart(2, '0'); // Ensure two digits for the day\n\n    return `${year}-${month}-${day}`;\n  }\n  function TruncatedText(text, maxLength) {\n    if (text.length > maxLength) {\n      return text.substring(0, maxLength) + '...';\n    }\n    return text;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-borderless\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Raised On\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Ticket Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Assigned By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: taskList && ((_taskList$ = taskList[0]) === null || _taskList$ === void 0 ? void 0 : _taskList$.all_tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: DateExtractor(task.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.task_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: TruncatedText(task.summary, 30)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: DateExtractor(task.due_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.assignee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, task.task_id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TaskList","taskList","_taskList$","DateExtractor","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","TruncatedText","text","maxLength","length","substring","className","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","all_tasks","map","task","index","created_at","task_id","summary","priority","status","due_date","assignee","_c","$RefreshReg$"],"sources":["/home/sudip/taskrabbit-frontend/src/Pages/EmpHome/taskList.js"],"sourcesContent":["import React from \"react\";\nimport './taskList.css'; // Add your custom styles here\n\nconst TaskList = ({ taskList }) => {\n    function DateExtractor(dateString) {\n        const date = new Date(dateString);\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0'); // Ensure two digits for the month\n        const day = String(date.getDate()).padStart(2, '0'); // Ensure two digits for the day\n        \n        return `${year}-${month}-${day}`;\n    }\n\n    function TruncatedText(text, maxLength) {\n        if (text.length > maxLength) {\n            return text.substring(0, maxLength) + '...';\n        }\n        return text;\n    }\n\n    return (\n        <div className=\"task-table-container\">\n            <table className=\"table table-borderless\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Raised On</th>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Ticket Title</th>\n                        <th scope=\"col\">Priority</th>\n                        <th scope=\"col\">Status</th>\n                        <th scope=\"col\">Due Date</th>\n                        <th scope=\"col\">Assigned By</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {taskList && taskList[0]?.all_tasks.map((task, index) => (\n                        <tr key={task.task_id || index}>\n                            <td>{DateExtractor(task.created_at)}</td>\n                            <td>{task.task_id}</td>\n                            <td>{TruncatedText(task.summary, 30)}</td>\n                            <td>{task.priority}</td>\n                            <td>{task.status}</td>\n                            <td>{DateExtractor(task.due_date)}</td>\n                            <td>{task.assignee}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}