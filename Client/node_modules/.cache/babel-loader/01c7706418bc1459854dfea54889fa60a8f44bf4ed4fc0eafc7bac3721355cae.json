{"ast":null,"code":"var _jsxFileName = \"/home/sudip/taskrabbit-frontend/src/Pages/EmpHome/home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { backend_url } from \"../../Components/Configurations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmpHome = () => {\n  _s();\n  const [user, setUser] = useState();\n  const [taskList, setTasksList] = useState();\n  const token = userDetails['user']['token'];\n  const userDetails = JSON.parse(sessionStorage.getItem('user'));\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(`${backend_url}/tasks/get-tasks/${employee_id}/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.log(errorData['error']);\n      }\n      const data = await response.json();\n      console.log(data);\n      setTasksList(data);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: taskList ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is a task lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-grow text-dark\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(EmpHome, \"IbnM9YOwm/i1+6Ahfpq79lhw9gM=\");\n_c = EmpHome;\nexport default EmpHome;\nvar _c;\n$RefreshReg$(_c, \"EmpHome\");","map":{"version":3,"names":["React","useState","useEffect","backend_url","jsxDEV","_jsxDEV","EmpHome","_s","user","setUser","taskList","setTasksList","token","userDetails","JSON","parse","sessionStorage","getItem","fetchData","response","fetch","employee_id","method","headers","ok","errorData","json","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","role","_c","$RefreshReg$"],"sources":["/home/sudip/taskrabbit-frontend/src/Pages/EmpHome/home.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport { backend_url } from \"../../Components/Configurations\";\n\nconst EmpHome = () => {\n    const [ user,setUser] = useState();\n    const [ taskList, setTasksList ] = useState();\n\n    const token = userDetails['user']['token']\n    const userDetails = JSON.parse(sessionStorage.getItem('user'))\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await fetch(`${backend_url}/tasks/get-tasks/${employee_id}/`,{\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n\n            if (!response.ok){\n                const errorData = await response.json();\n                console.log(errorData['error'])\n            }\n\n            const data = await response.json();\n            console.log(data);\n            setTasksList(data);\n        }\n        fetchData();\n    },[])\n\n    return(\n        <div>\n            { taskList ? (\n                <div>\n                    This is a task lists\n                </div>\n            ): (\n                <div className=\"spinner-grow text-dark\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            ) }\n        </div>\n    )\n}\n\nexport default EmpHome;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,WAAW,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAAEC,IAAI,EAACC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAClC,MAAM,CAAES,QAAQ,EAAEC,YAAY,CAAE,GAAGV,QAAQ,CAAC,CAAC;EAE7C,MAAMW,KAAK,GAAGC,WAAW,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;EAC1C,MAAMA,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAE9Df,SAAS,CAAC,MAAM;IACZ,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjB,WAAW,oBAAoBkB,WAAW,GAAG,EAAC;QAC1EC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUX,KAAK;QACpC;MACJ,CAAC,CAAC;MAEF,IAAI,CAACO,QAAQ,CAACK,EAAE,EAAC;QACb,MAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QACvCC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC,OAAO,CAAC,CAAC;MACnC;MAEA,MAAMI,IAAI,GAAG,MAAMV,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;MACjBlB,YAAY,CAACkB,IAAI,CAAC;IACtB,CAAC;IACDX,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;EAEL,oBACIb,OAAA;IAAAyB,QAAA,EACMpB,QAAQ,gBACNL,OAAA;MAAAyB,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAEN7B,OAAA;MAAK8B,SAAS,EAAC,wBAAwB;MAACC,IAAI,EAAC,QAAQ;MAAAN,QAAA,eACjDzB,OAAA;QAAM8B,SAAS,EAAC,iBAAiB;QAAAL,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAA3B,EAAA,CA1CKD,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}