{"ast":null,"code":"var _jsxFileName = \"/home/sudip/taskrabbit-frontend/src/Pages/EmpHome/home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { backend_url } from \"../../Components/Configurations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmpHome = () => {\n  _s();\n  const [user, setUser] = useState();\n  const [taskList, setTasksList] = useState();\n  const userDetails = JSON.parse(sessionStorage.getItem('user'));\n  const username = userDetails['user']['username'];\n  const token = userDetails['user']['token'];\n  useEffect(async () => {\n    const response = fetch(`${backend_url}/tasks/${username}/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      console.log(errorData['error']);\n    }\n    const data = await response.json();\n    console.log(data);\n    setTasksList(data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: taskList ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is a task lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"spinner-grow text-dark\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"visually-hidden\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(EmpHome, \"IbnM9YOwm/i1+6Ahfpq79lhw9gM=\");\n_c = EmpHome;\nexport default EmpHome;\nvar _c;\n$RefreshReg$(_c, \"EmpHome\");","map":{"version":3,"names":["React","useState","useEffect","backend_url","jsxDEV","_jsxDEV","EmpHome","_s","user","setUser","taskList","setTasksList","userDetails","JSON","parse","sessionStorage","getItem","username","token","response","fetch","method","headers","ok","errorData","json","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","class","role","_c","$RefreshReg$"],"sources":["/home/sudip/taskrabbit-frontend/src/Pages/EmpHome/home.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport { backend_url } from \"../../Components/Configurations\";\n\nconst EmpHome = () => {\n    const [ user,setUser] = useState();\n    const [ taskList, setTasksList ] = useState();\n\n    const userDetails = JSON.parse(sessionStorage.getItem('user'))\n    const username = userDetails['user']['username']\n    const token = userDetails['user']['token']\n\n    useEffect(async () => {\n        const response = fetch(`${backend_url}/tasks/${username}/`,{\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n\n        if (!response.ok){\n            const errorData = await response.json();\n            console.log(errorData['error'])\n        }\n\n        const data = await response.json();\n        console.log(data);\n        setTasksList(data);\n    })\n\n    return(\n        <div>\n            { taskList ? (\n                <div>\n                    This is a task lists\n                </div>\n            ): (\n                <div class=\"spinner-grow text-dark\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n            ) }\n        </div>\n    )\n}\n\nexport default EmpHome;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,WAAW,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAAEC,IAAI,EAACC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAClC,MAAM,CAAES,QAAQ,EAAEC,YAAY,CAAE,GAAGV,QAAQ,CAAC,CAAC;EAE7C,MAAMW,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAC9D,MAAMC,QAAQ,GAAGL,WAAW,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC;EAChD,MAAMM,KAAK,GAAGN,WAAW,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;EAE1CV,SAAS,CAAC,YAAY;IAClB,MAAMiB,QAAQ,GAAGC,KAAK,CAAC,GAAGjB,WAAW,UAAUc,QAAQ,GAAG,EAAC;MACvDI,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUJ,KAAK;MACpC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACI,EAAE,EAAC;MACb,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MACvCC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC,OAAO,CAAC,CAAC;IACnC;IAEA,MAAMI,IAAI,GAAG,MAAMT,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;IACjBjB,YAAY,CAACiB,IAAI,CAAC;EACtB,CAAC,CAAC;EAEF,oBACIvB,OAAA;IAAAwB,QAAA,EACMnB,QAAQ,gBACNL,OAAA;MAAAwB,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAEN5B,OAAA;MAAK6B,KAAK,EAAC,wBAAwB;MAACC,IAAI,EAAC,QAAQ;MAAAN,QAAA,eAC7CxB,OAAA;QAAM6B,KAAK,EAAC,iBAAiB;QAAAL,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAA1B,EAAA,CAxCKD,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}